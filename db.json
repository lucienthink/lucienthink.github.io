{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/magnetic/source/css/main.css","path":"css/main.css","modified":1,"renderable":1},{"_id":"themes/magnetic/source/css/reset.css","path":"css/reset.css","modified":0,"renderable":1},{"_id":"themes/magnetic/source/fonts/raleway-bold.eot","path":"fonts/raleway-bold.eot","modified":0,"renderable":1},{"_id":"themes/magnetic/source/fonts/raleway-bold.ttf","path":"fonts/raleway-bold.ttf","modified":0,"renderable":1},{"_id":"themes/magnetic/source/fonts/raleway-bold.woff","path":"fonts/raleway-bold.woff","modified":0,"renderable":1},{"_id":"themes/magnetic/source/fonts/raleway-regular.eot","path":"fonts/raleway-regular.eot","modified":0,"renderable":1},{"_id":"themes/magnetic/source/fonts/raleway-regular.ttf","path":"fonts/raleway-regular.ttf","modified":0,"renderable":1},{"_id":"themes/magnetic/source/fonts/raleway-regular.woff","path":"fonts/raleway-regular.woff","modified":0,"renderable":1},{"_id":"themes/magnetic/source/fonts/raleway-semibold.eot","path":"fonts/raleway-semibold.eot","modified":0,"renderable":1},{"_id":"themes/magnetic/source/img/men_icons.png","path":"img/men_icons.png","modified":0,"renderable":1},{"_id":"themes/magnetic/source/fonts/raleway-semibold.ttf","path":"fonts/raleway-semibold.ttf","modified":0,"renderable":1},{"_id":"themes/magnetic/source/img/p_navigation.png","path":"img/p_navigation.png","modified":0,"renderable":1},{"_id":"themes/magnetic/source/fonts/raleway-semibold.woff","path":"fonts/raleway-semibold.woff","modified":0,"renderable":1},{"_id":"themes/magnetic/source/img/point.png","path":"img/point.png","modified":0,"renderable":1},{"_id":"themes/magnetic/source/img/sm_hover.png","path":"img/sm_hover.png","modified":0,"renderable":1},{"_id":"themes/magnetic/source/img/sm.png","path":"img/sm.png","modified":0,"renderable":1},{"_id":"themes/magnetic/source/img/sm2.png","path":"img/sm2.png","modified":0,"renderable":1},{"_id":"themes/magnetic/source/js/map.js","path":"js/map.js","modified":0,"renderable":1},{"_id":"themes/magnetic/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/magnetic/source/fonts/raleway-bold.svg","path":"fonts/raleway-bold.svg","modified":0,"renderable":1},{"_id":"themes/magnetic/source/fonts/raleway-regular.svg","path":"fonts/raleway-regular.svg","modified":0,"renderable":1},{"_id":"themes/magnetic/source/fonts/raleway-semibold.svg","path":"fonts/raleway-semibold.svg","modified":0,"renderable":1},{"_id":"themes/magnetic/source/js/jquery.js","path":"js/jquery.js","modified":0,"renderable":1},{"_id":"source/img/KoaForCgi-cover_detail.png","path":"img/KoaForCgi-cover_detail.png","modified":0,"renderable":0},{"_id":"source/img/KoaForCgi-cover_index.png","path":"img/KoaForCgi-cover_index.png","modified":0,"renderable":0},{"_id":"source/img/RNLearning-1.png","path":"img/RNLearning-1.png","modified":0,"renderable":0},{"_id":"source/img/RNLearning-cover_detail.png","path":"img/RNLearning-cover_detail.png","modified":0,"renderable":0},{"_id":"source/img/RNLearning-cover_index-1.jpeg","path":"img/RNLearning-cover_index-1.jpeg","modified":0,"renderable":0},{"_id":"source/img/RNLearning-cover_index.png","path":"img/RNLearning-cover_index.png","modified":0,"renderable":0}],"Cache":[{"_id":"themes/magnetic/README.md","hash":"b424ff77024d6ec440616a4469b8104d6257a011","modified":1459699078000},{"_id":"themes/magnetic/_config.yml","hash":"ac3ea9d14564f9ff93a89fd1fcae39082c281a0b","modified":1464661478000},{"_id":"source/_posts/index.md","hash":"28b05205a139088c16ee411aac4557633042e59c","modified":1464342451000},{"_id":"themes/magnetic/languages/de.yml","hash":"424a9c1e6ab69334d7873f6574da02ca960aa572","modified":1459699078000},{"_id":"themes/magnetic/languages/default.yml","hash":"97326c9e6518d9f379778178b3b8f9a58434725d","modified":1459699078000},{"_id":"themes/magnetic/languages/es.yml","hash":"cb4eeca0ed3768a77e0cd216300f2b2549628b1b","modified":1459699078000},{"_id":"themes/magnetic/languages/en.yml","hash":"97326c9e6518d9f379778178b3b8f9a58434725d","modified":1459699078000},{"_id":"themes/magnetic/languages/no.yml","hash":"8ca475a3b4f8efe6603030f0013aae39668230e1","modified":1459699078000},{"_id":"themes/magnetic/languages/pl.yml","hash":"de7eb5850ae65ba7638e907c805fea90617a988c","modified":1459699078000},{"_id":"themes/magnetic/languages/ru.yml","hash":"42df7afeb7a35dc46d272b7f4fb880a9d9ebcaa5","modified":1459699078000},{"_id":"themes/magnetic/languages/zh-CN.yml","hash":"7bfcb0b8e97d7e5edcfca8ab26d55d9da2573c1c","modified":1459699078000},{"_id":"themes/magnetic/languages/zh-TW.yml","hash":"9acac6cc4f8002c3fa53ff69fb8cf66c915bd016","modified":1459699078000},{"_id":"themes/magnetic/layout/archive.ejs","hash":"943c3e6760ae64f5e9f3297a9039c13f0b0cee2f","modified":1459699078000},{"_id":"themes/magnetic/layout/layout.ejs","hash":"8ce3d566fff3c93975b0858b96f3a17e74c35438","modified":1459699078000},{"_id":"themes/magnetic/layout/index.ejs","hash":"825b59f2029e8b8a7d76f5213bd499ab3127f8ae","modified":1459699078000},{"_id":"themes/magnetic/layout/page.ejs","hash":"54f11f374dd0903086bd5bf7db507908034a8f28","modified":1459699078000},{"_id":"themes/magnetic/layout/post.ejs","hash":"38382e9bbeb6b8d2eafbd53fff2984111f524c1a","modified":1459699078000},{"_id":"themes/magnetic/layout/_partial/after-footer.ejs","hash":"4fc9b149179f3856c88d6cff6a86936a97bc431f","modified":1464768241000},{"_id":"themes/magnetic/layout/_partial/article-archive.ejs","hash":"e2cd0f49d5ce005711f7ebbd6bb894b8708728b8","modified":1459699078000},{"_id":"themes/magnetic/layout/_partial/article-full-nav.ejs","hash":"702b5f67442de777799973182fdaf17376715289","modified":1459699078000},{"_id":"themes/magnetic/layout/_partial/article-full.ejs","hash":"efa05ed649fd95151e44b77f7fac74f3ffe1475d","modified":1464661478000},{"_id":"themes/magnetic/layout/_partial/article-index.ejs","hash":"fbe3233c7d9a9d1e2e873c7123eb6459c87a3fa1","modified":1464767207000},{"_id":"themes/magnetic/layout/_partial/article-page.ejs","hash":"0a6f33c44539d5cf4f166b89fadec9a68fa12607","modified":1464661478000},{"_id":"themes/magnetic/layout/_partial/article-tags.ejs","hash":"d1e72b22d8c1575d823591971a442bb3bdcea0ec","modified":1459699078000},{"_id":"themes/magnetic/layout/_partial/comments.ejs","hash":"3fedb75436439d1d6979b7e4d20d48a593e12be4","modified":1459699078000},{"_id":"themes/magnetic/layout/_partial/gallery.ejs","hash":"1534fcafbec20a2b7abb6feb38c2d50e5f7bbeff","modified":1459699078000},{"_id":"themes/magnetic/layout/_partial/google-analytics.ejs","hash":"4e6e8de9becea5a1636a4dcadcf7a10c06e2426e","modified":1459699078000},{"_id":"themes/magnetic/layout/_partial/head.ejs","hash":"c8d8972395d276533879448e58189addb6578629","modified":1459699078000},{"_id":"themes/magnetic/layout/_partial/menu.ejs","hash":"a0327037d9acb7b770642a278620b9251c4c5318","modified":1464661478000},{"_id":"themes/magnetic/layout/_partial/pagination.ejs","hash":"bdf17317c1a9ac805abb57867f3f58faed03da1b","modified":1459699078000},{"_id":"themes/magnetic/source/css/main.css","hash":"67771f374f40eafcf7bec380bf1bd697923ec34e","modified":1464768254000},{"_id":"themes/magnetic/source/css/reset.css","hash":"72c93a8da611db543f98b7f958fd9780758ceb1d","modified":1459699078000},{"_id":"themes/magnetic/source/fonts/raleway-bold.eot","hash":"d41384d4dcc7947563068976b99dbccca65e709b","modified":1459699078000},{"_id":"themes/magnetic/source/fonts/raleway-bold.ttf","hash":"4eba2d3820d08437c56ecb93c9d64dd97733175b","modified":1459699078000},{"_id":"themes/magnetic/source/fonts/raleway-bold.woff","hash":"010acea1a46d8cb4cd9c62eeac1606a37288b217","modified":1459699078000},{"_id":"themes/magnetic/source/fonts/raleway-regular.eot","hash":"aa08081cf7040d4734dbae77772bf1a7d700fc2e","modified":1459699078000},{"_id":"themes/magnetic/source/fonts/raleway-regular.ttf","hash":"b92069d1c8d58b62a4a8cc714efcb7a5b305ddbe","modified":1459699078000},{"_id":"themes/magnetic/source/fonts/raleway-regular.woff","hash":"dac9720546a9606b23b051589a138e9e1b55ed7c","modified":1459699078000},{"_id":"themes/magnetic/source/fonts/raleway-semibold.eot","hash":"18544d8959809399cac867b3b6230823932ba187","modified":1459699078000},{"_id":"themes/magnetic/source/img/men_icons.png","hash":"6529a71633a4e7831886c54e1111432f9a75fd63","modified":1459699078000},{"_id":"themes/magnetic/source/fonts/raleway-semibold.ttf","hash":"49a7f9643860dab4fc1291f463fff564854d3f3f","modified":1459699078000},{"_id":"themes/magnetic/source/img/p_navigation.png","hash":"f9467cd6e6fe07485b107ba26fae9d8cbd097ce6","modified":1459699078000},{"_id":"themes/magnetic/source/fonts/raleway-semibold.woff","hash":"b6cd60f1c3eab6f2bb0ce437da2688f1a1b902a8","modified":1459699078000},{"_id":"themes/magnetic/source/img/point.png","hash":"94ca6629c55a89008d61ea44c8d9dc4c07945b51","modified":1459699078000},{"_id":"themes/magnetic/source/img/sm_hover.png","hash":"5aeb55d7562f58e1c2107b15e42167edf68e667b","modified":1459699078000},{"_id":"themes/magnetic/source/img/sm.png","hash":"bac9cd3901396cb02a06f79424ac426fe7b1ef74","modified":1459699078000},{"_id":"themes/magnetic/source/img/sm2.png","hash":"7e365ad4bd392829537739cb4118bfc6ac73b229","modified":1459699078000},{"_id":"themes/magnetic/source/js/map.js","hash":"10f7bba54547e1eb0eaaa2b1b338bd586a8e33bd","modified":1459699078000},{"_id":"themes/magnetic/source/js/main.js","hash":"8dfaae4d029868a602173acdb17a6c683d4c5250","modified":1464768026000},{"_id":"themes/magnetic/source/fonts/raleway-bold.svg","hash":"821a3f6bf7803cc8e839d5fe582467e7f5259bd5","modified":1459699078000},{"_id":"themes/magnetic/source/fonts/raleway-regular.svg","hash":"26c6f5b2c16b430e574f3b1617f6f4ea519320e1","modified":1459699078000},{"_id":"themes/magnetic/source/fonts/raleway-semibold.svg","hash":"062c29cb54ccd25d36f0b1adb2591db2bebfcedc","modified":1459699078000},{"_id":"themes/magnetic/source/js/jquery.js","hash":"4566b5815f47f976c7c3d3083c600ad5561b6fc0","modified":1459699078000},{"_id":"public/2016/05/26/index/index.html","hash":"8f0e63ba29c6b86933229930b0cd3023bbfed140","modified":1464343426734},{"_id":"public/archives/index.html","hash":"22dbe0dda6ad5c73d80da377ba9cbb912508916f","modified":1464768241888},{"_id":"public/archives/2016/index.html","hash":"cb4535dd86ec4f211c24761ca6b40be2af4230bf","modified":1464768241888},{"_id":"public/archives/2016/05/index.html","hash":"0402935669e491875581fecf66445856ed95f256","modified":1464768241888},{"_id":"public/index.html","hash":"3688e2ba87b54a44f746927f182bba5caa63c946","modified":1464768241888},{"_id":"public/fonts/raleway-bold.eot","hash":"d41384d4dcc7947563068976b99dbccca65e709b","modified":1464343426746},{"_id":"public/fonts/raleway-bold.ttf","hash":"4eba2d3820d08437c56ecb93c9d64dd97733175b","modified":1464343426747},{"_id":"public/fonts/raleway-bold.woff","hash":"010acea1a46d8cb4cd9c62eeac1606a37288b217","modified":1464343426747},{"_id":"public/fonts/raleway-regular.eot","hash":"aa08081cf7040d4734dbae77772bf1a7d700fc2e","modified":1464343426747},{"_id":"public/fonts/raleway-regular.ttf","hash":"b92069d1c8d58b62a4a8cc714efcb7a5b305ddbe","modified":1464343426747},{"_id":"public/fonts/raleway-regular.woff","hash":"dac9720546a9606b23b051589a138e9e1b55ed7c","modified":1464343426747},{"_id":"public/fonts/raleway-semibold.eot","hash":"18544d8959809399cac867b3b6230823932ba187","modified":1464343426747},{"_id":"public/img/men_icons.png","hash":"6529a71633a4e7831886c54e1111432f9a75fd63","modified":1464343426747},{"_id":"public/img/p_navigation.png","hash":"f9467cd6e6fe07485b107ba26fae9d8cbd097ce6","modified":1464343426747},{"_id":"public/fonts/raleway-semibold.ttf","hash":"49a7f9643860dab4fc1291f463fff564854d3f3f","modified":1464343426747},{"_id":"public/fonts/raleway-semibold.woff","hash":"b6cd60f1c3eab6f2bb0ce437da2688f1a1b902a8","modified":1464343426747},{"_id":"public/img/point.png","hash":"94ca6629c55a89008d61ea44c8d9dc4c07945b51","modified":1464343426747},{"_id":"public/img/sm_hover.png","hash":"5aeb55d7562f58e1c2107b15e42167edf68e667b","modified":1464343426747},{"_id":"public/img/sm.png","hash":"bac9cd3901396cb02a06f79424ac426fe7b1ef74","modified":1464343426747},{"_id":"public/img/sm2.png","hash":"7e365ad4bd392829537739cb4118bfc6ac73b229","modified":1464343426747},{"_id":"public/fonts/raleway-bold.svg","hash":"821a3f6bf7803cc8e839d5fe582467e7f5259bd5","modified":1464343426750},{"_id":"public/fonts/raleway-regular.svg","hash":"26c6f5b2c16b430e574f3b1617f6f4ea519320e1","modified":1464343426750},{"_id":"public/fonts/raleway-semibold.svg","hash":"062c29cb54ccd25d36f0b1adb2591db2bebfcedc","modified":1464343426751},{"_id":"public/css/reset.css","hash":"72c93a8da611db543f98b7f958fd9780758ceb1d","modified":1464343426752},{"_id":"public/js/main.js","hash":"8dfaae4d029868a602173acdb17a6c683d4c5250","modified":1464768026875},{"_id":"public/js/map.js","hash":"10f7bba54547e1eb0eaaa2b1b338bd586a8e33bd","modified":1464343426752},{"_id":"public/css/main.css","hash":"67771f374f40eafcf7bec380bf1bd697923ec34e","modified":1464768254745},{"_id":"public/js/jquery.js","hash":"4566b5815f47f976c7c3d3083c600ad5561b6fc0","modified":1464343426752},{"_id":"source/img/KoaForCgi-cover_detail.png","hash":"a5c74cf845c9f0e870546133b14102a3540cc602","modified":1464661478000},{"_id":"source/img/KoaForCgi-cover_index.png","hash":"fad94095676ff282461670702fa33c33e905674b","modified":1464661478000},{"_id":"source/img/RNLearning-1.png","hash":"14545e942749dcf7df2402279190efb671872d48","modified":1464661478000},{"_id":"source/img/RNLearning-cover_detail.png","hash":"6525ad1cf78d893dc9e55fe34d3ef6e95f524d3f","modified":1464661478000},{"_id":"source/img/RNLearning-cover_index-1.jpeg","hash":"d6ba2dc99788e54577aec82bb77750304415240b","modified":1464661478000},{"_id":"source/img/RNLearning-cover_index.png","hash":"8ac6787c6bd7de4cedf4004caba37daffde63d83","modified":1464661478000},{"_id":"source/_posts/RNlLearning-1.md","hash":"d536f30da6e0189c7dccfcdcdbc22625b1a50d39","modified":1464661478000},{"_id":"source/_posts/KoaForCgi.md","hash":"cd631c21b7e2154a0cdaba8b8ca8cce7048ed214","modified":1464661478000},{"_id":"public/archives/2015/index.html","hash":"c5b543643aed08ffa04ac8dcd65a3175ec3a6e06","modified":1464768241888},{"_id":"public/archives/2015/09/index.html","hash":"2b0b16bbeff7f533062b0e0829d2d56fecbdd0a0","modified":1464768241888},{"_id":"public/2015/09/10/KoaForCgi/index.html","hash":"299e3924e9f92bc1c8a0e72a32a9286915db06d5","modified":1464768241889},{"_id":"public/2016/05/30/RNlLearning-1/index.html","hash":"1f3b8ae137401a540810c17649e90c7a6f0c5384","modified":1464768241888},{"_id":"public/tags/React-Native/index.html","hash":"b7b4433d3f8257e9919454c6d20ce8edbe6376b9","modified":1464768241888},{"_id":"public/tags/koa/index.html","hash":"ad862c49d583f6f4b4b2d5a7a82b6115f3dc5c47","modified":1464768241888},{"_id":"public/img/KoaForCgi-cover_index.png","hash":"fad94095676ff282461670702fa33c33e905674b","modified":1464765725539},{"_id":"public/img/KoaForCgi-cover_detail.png","hash":"a5c74cf845c9f0e870546133b14102a3540cc602","modified":1464765725539},{"_id":"public/img/RNLearning-1.png","hash":"14545e942749dcf7df2402279190efb671872d48","modified":1464765725539},{"_id":"public/img/RNLearning-cover_detail.png","hash":"6525ad1cf78d893dc9e55fe34d3ef6e95f524d3f","modified":1464765725539},{"_id":"public/img/RNLearning-cover_index.png","hash":"8ac6787c6bd7de4cedf4004caba37daffde63d83","modified":1464765725540},{"_id":"public/img/RNLearning-cover_index-1.jpeg","hash":"d6ba2dc99788e54577aec82bb77750304415240b","modified":1464765725540}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"基于Koa和co使用node编写cgi","date":"2015-09-10T12:50:00.000Z","cover_index":"/img/KoaForCgi-cover_index.png","cover_detail":"/img/KoaForCgi-cover_detail.png","comments":1,"_content":"\n最近有需求需要用到node来写一些简易的cgi，帮助后台同学减轻压力。\n\n用node写cgi有两个问题，一个是端口，我们不能每加一个cgi就新增一个端口；第二个是异步回调问题，实现中会遇到很多例如读DB、读文件的异步行为，多层的callback会让代码很繁琐且不易输出内容。\n\n于是想着用最近很火的tj大神的Koa来搭建一套node-cgi框架。\n\n先说说koa，koa是基于co的类似于express的web开发框架，了解koa首先要了解co，了解co首先要了解ES6的generator。\n\n#1.generator\n\ngenerator是ES6的新函数，写法如下：\n\n```\nfunction* generator(){\n   yield hello;\n   yield word;\n}\n\nvar G = generator();\n\nconsole.log(G.next()); //{ value: hello, done: false }\nconsole.log(G.next()); //{ value: word, done: false }\nconsole.log(G.next()); //{ value: undefined, done: true }\n```\n\ngenerator使用yield的方法，让函数内部执行暂定，只有当调用next()方法的时候，才会接着往下走，同时返回一个对象，返回对象有两个值，一个是yield后面执行的结果，一个是done字段，如果yield都执行完了 done 字段就变为true。\n\n使用yield来阻断函数内部执行，就可以将我们的异步函数转成同步执行。\n\n\n\n#2. co\n\n下来再看co，co帮助我们实现了自动调用next()方法，在co内部写yield，等待yield执行完毕就可以继续向下进行。\n\n例如使用tof获取用户信息：\n\n```\nco(function *() {\n    var user = yield checkLogin(ticket, ip);\n    console.log(user);\n})\n\nfunction checkLogin(ticket, ip){\n    return function (done) {\n        tof.checkLogin(ticket, ip, function(err, result){\n            var user = result;\n            done(null, user);\n        });\n    };\n}\n```\n\n#3. koa\n\nkoa和express一样，使用中间件：\n\n```\nvar koa = require('koa');\n\nvar app = koa();\napp.use(function *() {\n  this.body = 'Hello World!';\n});\n\napp.listen(8888);\n```\n\n koa的Context 把 node 的 request, response 对象封装进一个单独对象, 并提供许多开发 web 应用和 APIs 有用的方法. 那些在 HTTP server 开发中使用非常频繁操作, 直接在 Koa 里实现, 而不是放在更高层次的框架, 这样中间件就不需要重复实现这些通用的功能。\n\n```\napp.use(function *(){\n  this; // is the Context\n  this.request; // is a koa Request\n  this.response; // is a koa Response\n});\n```\n\n 需要输出的内容，直接赋值给this.body即可。\n\n\n\n4. node-cgi\n\n了解完co和koa，我们就可以搭建一个简易的node-cgi框架，目录如下：\n\n\n\napp.js作为入口，使用\n\nnode --harmony-generators app.js \n来进行启动，在modules这块使用按需加载，拿到url里的参数后再加载对应的module：\n\n```\nvar cgi = require('./modules/' + cgiName);\n\nvar result = yield function(done){\n    cgi('get', param, done);\n}\n```\n\n这样每次我们发布 只需替换modules文件夹里的js文件即可，不需要启停node服务（和php很像）。\n\n而modules里的cgi文件，可以使用co来处理内部的异步回调，方法和koa相同，愉快同步向下写js从此开始了~\n\n下面附上代码\n\napp.js\n\n```\n/**\n * @fileOverview node-cgi入口\n * @version 1.0.0\n * @author <a href=\"mailto:lucienxu@tencent.com\">lucienxu</a>\n * @date 2015/9/8\n * @copyright Copyright (c) 2014, Tencent Inc. All rights reserved.\n * @see [link]\n */\n\nvar logger = require('koa-logger');\nvar router = require('koa-router')();\nvar parse = require('co-body');\nvar tof = require('tof')('b90b498f8ab441afbcf4f023f7dd8e08');\nvar koa = require('koa');\nvar app = koa();\n\n\nvar posts = [];\n\nvar user;\n\napp.keys = ['some secret hurr'];\n\n//app.env = 'production';\n\n//console.log(app.env);\n\n// middleware\n\napp.use(logger());\n\nrouter.get('/node-cgi/:cgiName', get);\nrouter.post('/node-cgi/:cgiName', post);\n\n\napp.use(router.routes()).use(router.allowedMethods());\n\n\napp.use(function *() {\n    console.log('tof');\n    console.log(user)\n    if(user){\n        return;\n    }\n    if ('production' === app.env) {\n        console.log('productation')\n\n        var ticket = this.cookies.get('TCOA_TICKET');\n        var ip = this.ip.substr(7);\n        var value;\n        yield checkLogin(ticket, ip);\n\n        console.log(user);\n\n\n    } else {\n\n        console.log('dev');\n        user = {\n            loginname: \"lucienxu\",\n            chinesename: \"徐扬\",\n            deptname: \"微信广告\"\n        };\n\n    }\n\n\n\n});\n\nfunction checkLogin(ticket, ip){\n\n\n    return function (done) {\n        tof.checkLogin(ticket, ip, function(err, result){\n            user = result;\n            //user = 1;\n            done();\n        });\n    };\n\n}\n\n// route definitions\n\nfunction *get(next){\n    yield next;\n\n    var cgiName = this.params.cgiName;\n    console.log(cgiName + ': begin--get');\n\n    var param = this.request.query;\n\n    this.type = 'text/html; charset=utf-8';\n    this.set('Cache-Control', 'no-cache');\n    this.set('Connection', 'keep-alive');\n\n    var cgi = require('./modules/' + cgiName);\n\n    var result = yield function(done){\n        cgi('get', param, done);\n    }\n\n    this.body = param.callback + '(' + JSON.stringify(result) + ')';\n\n    console.log(cgiName + ': done--get');\n    return;\n}\n\nfunction *post(next){\n    yield next;\n\n    var cgiName = this.params.cgiName;\n    console.log(cgiName + ': begin--post');\n    var param = yield parse.form(this);\n\n    this.type = 'application/json; charset=utf-8';\n    this.set('Cache-Control', 'no-cache');\n    this.set('Connection', 'keep-alive');\n    this.set(\"Access-Control-Allow-Origin\", this.header.origin);\n    this.set(\"Access-Control-Allow-Credentials\", \"true\");\n\n    var cgi = require('./modules/' + cgiName);\n\n    var result = yield function(done){\n        cgi('post', param, done);\n    }\n\n    this.body = result;\n\n    console.log(cgiName + ': done--post');\n    return;\n}\n\n\n\n\n// listen\n\napp.listen(33010);\nconsole.log('listening on port 33010');\n```\n\n\nsns_super_white_list.js\n```\n/**\n * @fileOverview 超级白名单cgi\n * @version 1.0.0\n * @author <a href=\"mailto:lucienxu@tencent.com\">lucienxu</a>\n * @date 2015/9/8\n * @copyright Copyright (c) 2014, Tencent Inc. All rights reserved.\n * @see [link]\n */\n\nvar Sequelize = require('sequelize');\nvar co = require('co');\nvar db = new Sequelize('mysql://root@127.0.0.1:3306/xxx');\n\nmodule.exports = function (method, param, resp) {\n    /*\n    *   三个参数，method是get/post，param是传入参数，resp是输出数据\n    *   resp(err, result);\n    *   resp传入两个参数，第一个是错误信息，将通过console打印出来，第二项是输出的结果result，result为json格式\n    */\n\n    co(function *() {\n        //db.sync();\n\n        db[\"t_misc_conf\"] = db.define('t_misc_conf', {\n            key: {\n                type: Sequelize.STRING,\n                primaryKey: true,\n            },\n            value: Sequelize.TEXT,\n        }, {\n            timestamps: false,\n            freezeTableName: true,\n        });\n\n        console.log(method)\n        console.log(param)\n\n        var result;\n\n        if(method == 'get'){\n            console.log('method - get')\n            switch (param.action){\n                case 'get_white_list':\n                    console.log('get_white_list')\n                    result = yield *getWhiteList();\n                    break;\n            }\n        }else if(method == 'post'){\n            console.log('method - post')\n            switch (param.action){\n                case 'set_white_list':\n                    console.log('set_white_list')\n                    result = yield *setWhiteList(param);\n                    break;\n            }\n        }\n\n        resp(null, result);\n\n    })\n\n    function *getWhiteList(){\n        console.log('get_white_list---begin')\n        var result = yield function (done) {\n            db.t_misc_conf.findOne({where: {key: 'super_whitelist'}}).then(function (res) {\n                console.log('get_white_list--yield--done')\n                console.log(res.get('value'))\n                done(null, {\"ret\": 0, msg: 'success', \"result\": res.get('value')});\n            });\n        }\n\n        console.log('get_white_list---done')\n        return result;\n    }\n\n    function *setWhiteList(param){\n        console.log('set_white_list---begin')\n        var data = {\n            value: param.value\n        }\n        var result = yield function (done) {\n            db.t_misc_conf.update(data, {where: {key: 'super_whitelist'}}).then(function (res) {\n                console.log(res)\n                done(null, {\"ret\": 0, msg: 'success'});\n            });\n        }\n        console.log('set_white_list---done')\n        return result;\n    }\n\n\n\n}\n```\n \n\n\n\n \n\n","source":"_posts/KoaForCgi.md","raw":"title: 基于Koa和co使用node编写cgi\ndate: 2015-09-10 20:50\ncover_index: /img/KoaForCgi-cover_index.png\ncover_detail: /img/KoaForCgi-cover_detail.png\ntags: koa\ncomments: true\n---\n\n最近有需求需要用到node来写一些简易的cgi，帮助后台同学减轻压力。\n\n用node写cgi有两个问题，一个是端口，我们不能每加一个cgi就新增一个端口；第二个是异步回调问题，实现中会遇到很多例如读DB、读文件的异步行为，多层的callback会让代码很繁琐且不易输出内容。\n\n于是想着用最近很火的tj大神的Koa来搭建一套node-cgi框架。\n\n先说说koa，koa是基于co的类似于express的web开发框架，了解koa首先要了解co，了解co首先要了解ES6的generator。\n\n#1.generator\n\ngenerator是ES6的新函数，写法如下：\n\n```\nfunction* generator(){\n   yield hello;\n   yield word;\n}\n\nvar G = generator();\n\nconsole.log(G.next()); //{ value: hello, done: false }\nconsole.log(G.next()); //{ value: word, done: false }\nconsole.log(G.next()); //{ value: undefined, done: true }\n```\n\ngenerator使用yield的方法，让函数内部执行暂定，只有当调用next()方法的时候，才会接着往下走，同时返回一个对象，返回对象有两个值，一个是yield后面执行的结果，一个是done字段，如果yield都执行完了 done 字段就变为true。\n\n使用yield来阻断函数内部执行，就可以将我们的异步函数转成同步执行。\n\n\n\n#2. co\n\n下来再看co，co帮助我们实现了自动调用next()方法，在co内部写yield，等待yield执行完毕就可以继续向下进行。\n\n例如使用tof获取用户信息：\n\n```\nco(function *() {\n    var user = yield checkLogin(ticket, ip);\n    console.log(user);\n})\n\nfunction checkLogin(ticket, ip){\n    return function (done) {\n        tof.checkLogin(ticket, ip, function(err, result){\n            var user = result;\n            done(null, user);\n        });\n    };\n}\n```\n\n#3. koa\n\nkoa和express一样，使用中间件：\n\n```\nvar koa = require('koa');\n\nvar app = koa();\napp.use(function *() {\n  this.body = 'Hello World!';\n});\n\napp.listen(8888);\n```\n\n koa的Context 把 node 的 request, response 对象封装进一个单独对象, 并提供许多开发 web 应用和 APIs 有用的方法. 那些在 HTTP server 开发中使用非常频繁操作, 直接在 Koa 里实现, 而不是放在更高层次的框架, 这样中间件就不需要重复实现这些通用的功能。\n\n```\napp.use(function *(){\n  this; // is the Context\n  this.request; // is a koa Request\n  this.response; // is a koa Response\n});\n```\n\n 需要输出的内容，直接赋值给this.body即可。\n\n\n\n4. node-cgi\n\n了解完co和koa，我们就可以搭建一个简易的node-cgi框架，目录如下：\n\n\n\napp.js作为入口，使用\n\nnode --harmony-generators app.js \n来进行启动，在modules这块使用按需加载，拿到url里的参数后再加载对应的module：\n\n```\nvar cgi = require('./modules/' + cgiName);\n\nvar result = yield function(done){\n    cgi('get', param, done);\n}\n```\n\n这样每次我们发布 只需替换modules文件夹里的js文件即可，不需要启停node服务（和php很像）。\n\n而modules里的cgi文件，可以使用co来处理内部的异步回调，方法和koa相同，愉快同步向下写js从此开始了~\n\n下面附上代码\n\napp.js\n\n```\n/**\n * @fileOverview node-cgi入口\n * @version 1.0.0\n * @author <a href=\"mailto:lucienxu@tencent.com\">lucienxu</a>\n * @date 2015/9/8\n * @copyright Copyright (c) 2014, Tencent Inc. All rights reserved.\n * @see [link]\n */\n\nvar logger = require('koa-logger');\nvar router = require('koa-router')();\nvar parse = require('co-body');\nvar tof = require('tof')('b90b498f8ab441afbcf4f023f7dd8e08');\nvar koa = require('koa');\nvar app = koa();\n\n\nvar posts = [];\n\nvar user;\n\napp.keys = ['some secret hurr'];\n\n//app.env = 'production';\n\n//console.log(app.env);\n\n// middleware\n\napp.use(logger());\n\nrouter.get('/node-cgi/:cgiName', get);\nrouter.post('/node-cgi/:cgiName', post);\n\n\napp.use(router.routes()).use(router.allowedMethods());\n\n\napp.use(function *() {\n    console.log('tof');\n    console.log(user)\n    if(user){\n        return;\n    }\n    if ('production' === app.env) {\n        console.log('productation')\n\n        var ticket = this.cookies.get('TCOA_TICKET');\n        var ip = this.ip.substr(7);\n        var value;\n        yield checkLogin(ticket, ip);\n\n        console.log(user);\n\n\n    } else {\n\n        console.log('dev');\n        user = {\n            loginname: \"lucienxu\",\n            chinesename: \"徐扬\",\n            deptname: \"微信广告\"\n        };\n\n    }\n\n\n\n});\n\nfunction checkLogin(ticket, ip){\n\n\n    return function (done) {\n        tof.checkLogin(ticket, ip, function(err, result){\n            user = result;\n            //user = 1;\n            done();\n        });\n    };\n\n}\n\n// route definitions\n\nfunction *get(next){\n    yield next;\n\n    var cgiName = this.params.cgiName;\n    console.log(cgiName + ': begin--get');\n\n    var param = this.request.query;\n\n    this.type = 'text/html; charset=utf-8';\n    this.set('Cache-Control', 'no-cache');\n    this.set('Connection', 'keep-alive');\n\n    var cgi = require('./modules/' + cgiName);\n\n    var result = yield function(done){\n        cgi('get', param, done);\n    }\n\n    this.body = param.callback + '(' + JSON.stringify(result) + ')';\n\n    console.log(cgiName + ': done--get');\n    return;\n}\n\nfunction *post(next){\n    yield next;\n\n    var cgiName = this.params.cgiName;\n    console.log(cgiName + ': begin--post');\n    var param = yield parse.form(this);\n\n    this.type = 'application/json; charset=utf-8';\n    this.set('Cache-Control', 'no-cache');\n    this.set('Connection', 'keep-alive');\n    this.set(\"Access-Control-Allow-Origin\", this.header.origin);\n    this.set(\"Access-Control-Allow-Credentials\", \"true\");\n\n    var cgi = require('./modules/' + cgiName);\n\n    var result = yield function(done){\n        cgi('post', param, done);\n    }\n\n    this.body = result;\n\n    console.log(cgiName + ': done--post');\n    return;\n}\n\n\n\n\n// listen\n\napp.listen(33010);\nconsole.log('listening on port 33010');\n```\n\n\nsns_super_white_list.js\n```\n/**\n * @fileOverview 超级白名单cgi\n * @version 1.0.0\n * @author <a href=\"mailto:lucienxu@tencent.com\">lucienxu</a>\n * @date 2015/9/8\n * @copyright Copyright (c) 2014, Tencent Inc. All rights reserved.\n * @see [link]\n */\n\nvar Sequelize = require('sequelize');\nvar co = require('co');\nvar db = new Sequelize('mysql://root@127.0.0.1:3306/xxx');\n\nmodule.exports = function (method, param, resp) {\n    /*\n    *   三个参数，method是get/post，param是传入参数，resp是输出数据\n    *   resp(err, result);\n    *   resp传入两个参数，第一个是错误信息，将通过console打印出来，第二项是输出的结果result，result为json格式\n    */\n\n    co(function *() {\n        //db.sync();\n\n        db[\"t_misc_conf\"] = db.define('t_misc_conf', {\n            key: {\n                type: Sequelize.STRING,\n                primaryKey: true,\n            },\n            value: Sequelize.TEXT,\n        }, {\n            timestamps: false,\n            freezeTableName: true,\n        });\n\n        console.log(method)\n        console.log(param)\n\n        var result;\n\n        if(method == 'get'){\n            console.log('method - get')\n            switch (param.action){\n                case 'get_white_list':\n                    console.log('get_white_list')\n                    result = yield *getWhiteList();\n                    break;\n            }\n        }else if(method == 'post'){\n            console.log('method - post')\n            switch (param.action){\n                case 'set_white_list':\n                    console.log('set_white_list')\n                    result = yield *setWhiteList(param);\n                    break;\n            }\n        }\n\n        resp(null, result);\n\n    })\n\n    function *getWhiteList(){\n        console.log('get_white_list---begin')\n        var result = yield function (done) {\n            db.t_misc_conf.findOne({where: {key: 'super_whitelist'}}).then(function (res) {\n                console.log('get_white_list--yield--done')\n                console.log(res.get('value'))\n                done(null, {\"ret\": 0, msg: 'success', \"result\": res.get('value')});\n            });\n        }\n\n        console.log('get_white_list---done')\n        return result;\n    }\n\n    function *setWhiteList(param){\n        console.log('set_white_list---begin')\n        var data = {\n            value: param.value\n        }\n        var result = yield function (done) {\n            db.t_misc_conf.update(data, {where: {key: 'super_whitelist'}}).then(function (res) {\n                console.log(res)\n                done(null, {\"ret\": 0, msg: 'success'});\n            });\n        }\n        console.log('set_white_list---done')\n        return result;\n    }\n\n\n\n}\n```\n \n\n\n\n \n\n","slug":"KoaForCgi","published":1,"updated":"2016-05-31T02:24:38.000Z","_id":"ciou1e87v0001xktkk6o3my4x","layout":"post","photos":[],"link":"","content":"<p>最近有需求需要用到node来写一些简易的cgi，帮助后台同学减轻压力。</p>\n<p>用node写cgi有两个问题，一个是端口，我们不能每加一个cgi就新增一个端口；第二个是异步回调问题，实现中会遇到很多例如读DB、读文件的异步行为，多层的callback会让代码很繁琐且不易输出内容。</p>\n<p>于是想着用最近很火的tj大神的Koa来搭建一套node-cgi框架。</p>\n<p>先说说koa，koa是基于co的类似于express的web开发框架，了解koa首先要了解co，了解co首先要了解ES6的generator。</p>\n<p>#1.generator</p>\n<p>generator是ES6的新函数，写法如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function* generator()&#123;</span><br><span class=\"line\">   yield hello;</span><br><span class=\"line\">   yield word;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">var G = generator();</span><br><span class=\"line\"></span><br><span class=\"line\">console.log(G.next()); //&#123; value: hello, done: false &#125;</span><br><span class=\"line\">console.log(G.next()); //&#123; value: word, done: false &#125;</span><br><span class=\"line\">console.log(G.next()); //&#123; value: undefined, done: true &#125;</span><br></pre></td></tr></table></figure>\n<p>generator使用yield的方法，让函数内部执行暂定，只有当调用next()方法的时候，才会接着往下走，同时返回一个对象，返回对象有两个值，一个是yield后面执行的结果，一个是done字段，如果yield都执行完了 done 字段就变为true。</p>\n<p>使用yield来阻断函数内部执行，就可以将我们的异步函数转成同步执行。</p>\n<p>#2. co</p>\n<p>下来再看co，co帮助我们实现了自动调用next()方法，在co内部写yield，等待yield执行完毕就可以继续向下进行。</p>\n<p>例如使用tof获取用户信息：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">co(function *() &#123;</span><br><span class=\"line\">    var user = yield checkLogin(ticket, ip);</span><br><span class=\"line\">    console.log(user);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">function checkLogin(ticket, ip)&#123;</span><br><span class=\"line\">    return function (done) &#123;</span><br><span class=\"line\">        tof.checkLogin(ticket, ip, function(err, result)&#123;</span><br><span class=\"line\">            var user = result;</span><br><span class=\"line\">            done(null, user);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>#3. koa</p>\n<p>koa和express一样，使用中间件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var koa = require(&apos;koa&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">var app = koa();</span><br><span class=\"line\">app.use(function *() &#123;</span><br><span class=\"line\">  this.body = &apos;Hello World!&apos;;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">app.listen(8888);</span><br></pre></td></tr></table></figure>\n<p> koa的Context 把 node 的 request, response 对象封装进一个单独对象, 并提供许多开发 web 应用和 APIs 有用的方法. 那些在 HTTP server 开发中使用非常频繁操作, 直接在 Koa 里实现, 而不是放在更高层次的框架, 这样中间件就不需要重复实现这些通用的功能。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.use(function *()&#123;</span><br><span class=\"line\">  this; // is the Context</span><br><span class=\"line\">  this.request; // is a koa Request</span><br><span class=\"line\">  this.response; // is a koa Response</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p> 需要输出的内容，直接赋值给this.body即可。</p>\n<ol>\n<li>node-cgi</li>\n</ol>\n<p>了解完co和koa，我们就可以搭建一个简易的node-cgi框架，目录如下：</p>\n<p>app.js作为入口，使用</p>\n<p>node –harmony-generators app.js<br>来进行启动，在modules这块使用按需加载，拿到url里的参数后再加载对应的module：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var cgi = require(&apos;./modules/&apos; + cgiName);</span><br><span class=\"line\"></span><br><span class=\"line\">var result = yield function(done)&#123;</span><br><span class=\"line\">    cgi(&apos;get&apos;, param, done);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样每次我们发布 只需替换modules文件夹里的js文件即可，不需要启停node服务（和php很像）。</p>\n<p>而modules里的cgi文件，可以使用co来处理内部的异步回调，方法和koa相同，愉快同步向下写js从此开始了~</p>\n<p>下面附上代码</p>\n<p>app.js</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * @fileOverview node-cgi入口</span><br><span class=\"line\"> * @version 1.0.0</span><br><span class=\"line\"> * @author &lt;a href=&quot;mailto:lucienxu@tencent.com&quot;&gt;lucienxu&lt;/a&gt;</span><br><span class=\"line\"> * @date 2015/9/8</span><br><span class=\"line\"> * @copyright Copyright (c) 2014, Tencent Inc. All rights reserved.</span><br><span class=\"line\"> * @see [link]</span><br><span class=\"line\"> */</span><br><span class=\"line\"></span><br><span class=\"line\">var logger = require(&apos;koa-logger&apos;);</span><br><span class=\"line\">var router = require(&apos;koa-router&apos;)();</span><br><span class=\"line\">var parse = require(&apos;co-body&apos;);</span><br><span class=\"line\">var tof = require(&apos;tof&apos;)(&apos;b90b498f8ab441afbcf4f023f7dd8e08&apos;);</span><br><span class=\"line\">var koa = require(&apos;koa&apos;);</span><br><span class=\"line\">var app = koa();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">var posts = [];</span><br><span class=\"line\"></span><br><span class=\"line\">var user;</span><br><span class=\"line\"></span><br><span class=\"line\">app.keys = [&apos;some secret hurr&apos;];</span><br><span class=\"line\"></span><br><span class=\"line\">//app.env = &apos;production&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\">//console.log(app.env);</span><br><span class=\"line\"></span><br><span class=\"line\">// middleware</span><br><span class=\"line\"></span><br><span class=\"line\">app.use(logger());</span><br><span class=\"line\"></span><br><span class=\"line\">router.get(&apos;/node-cgi/:cgiName&apos;, get);</span><br><span class=\"line\">router.post(&apos;/node-cgi/:cgiName&apos;, post);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">app.use(router.routes()).use(router.allowedMethods());</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">app.use(function *() &#123;</span><br><span class=\"line\">    console.log(&apos;tof&apos;);</span><br><span class=\"line\">    console.log(user)</span><br><span class=\"line\">    if(user)&#123;</span><br><span class=\"line\">        return;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    if (&apos;production&apos; === app.env) &#123;</span><br><span class=\"line\">        console.log(&apos;productation&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\">        var ticket = this.cookies.get(&apos;TCOA_TICKET&apos;);</span><br><span class=\"line\">        var ip = this.ip.substr(7);</span><br><span class=\"line\">        var value;</span><br><span class=\"line\">        yield checkLogin(ticket, ip);</span><br><span class=\"line\"></span><br><span class=\"line\">        console.log(user);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        console.log(&apos;dev&apos;);</span><br><span class=\"line\">        user = &#123;</span><br><span class=\"line\">            loginname: &quot;lucienxu&quot;,</span><br><span class=\"line\">            chinesename: &quot;徐扬&quot;,</span><br><span class=\"line\">            deptname: &quot;微信广告&quot;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">function checkLogin(ticket, ip)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    return function (done) &#123;</span><br><span class=\"line\">        tof.checkLogin(ticket, ip, function(err, result)&#123;</span><br><span class=\"line\">            user = result;</span><br><span class=\"line\">            //user = 1;</span><br><span class=\"line\">            done();</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// route definitions</span><br><span class=\"line\"></span><br><span class=\"line\">function *get(next)&#123;</span><br><span class=\"line\">    yield next;</span><br><span class=\"line\"></span><br><span class=\"line\">    var cgiName = this.params.cgiName;</span><br><span class=\"line\">    console.log(cgiName + &apos;: begin--get&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">    var param = this.request.query;</span><br><span class=\"line\"></span><br><span class=\"line\">    this.type = &apos;text/html; charset=utf-8&apos;;</span><br><span class=\"line\">    this.set(&apos;Cache-Control&apos;, &apos;no-cache&apos;);</span><br><span class=\"line\">    this.set(&apos;Connection&apos;, &apos;keep-alive&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">    var cgi = require(&apos;./modules/&apos; + cgiName);</span><br><span class=\"line\"></span><br><span class=\"line\">    var result = yield function(done)&#123;</span><br><span class=\"line\">        cgi(&apos;get&apos;, param, done);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    this.body = param.callback + &apos;(&apos; + JSON.stringify(result) + &apos;)&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\">    console.log(cgiName + &apos;: done--get&apos;);</span><br><span class=\"line\">    return;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function *post(next)&#123;</span><br><span class=\"line\">    yield next;</span><br><span class=\"line\"></span><br><span class=\"line\">    var cgiName = this.params.cgiName;</span><br><span class=\"line\">    console.log(cgiName + &apos;: begin--post&apos;);</span><br><span class=\"line\">    var param = yield parse.form(this);</span><br><span class=\"line\"></span><br><span class=\"line\">    this.type = &apos;application/json; charset=utf-8&apos;;</span><br><span class=\"line\">    this.set(&apos;Cache-Control&apos;, &apos;no-cache&apos;);</span><br><span class=\"line\">    this.set(&apos;Connection&apos;, &apos;keep-alive&apos;);</span><br><span class=\"line\">    this.set(&quot;Access-Control-Allow-Origin&quot;, this.header.origin);</span><br><span class=\"line\">    this.set(&quot;Access-Control-Allow-Credentials&quot;, &quot;true&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">    var cgi = require(&apos;./modules/&apos; + cgiName);</span><br><span class=\"line\"></span><br><span class=\"line\">    var result = yield function(done)&#123;</span><br><span class=\"line\">        cgi(&apos;post&apos;, param, done);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    this.body = result;</span><br><span class=\"line\"></span><br><span class=\"line\">    console.log(cgiName + &apos;: done--post&apos;);</span><br><span class=\"line\">    return;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// listen</span><br><span class=\"line\"></span><br><span class=\"line\">app.listen(33010);</span><br><span class=\"line\">console.log(&apos;listening on port 33010&apos;);</span><br></pre></td></tr></table></figure>\n<p>sns_super_white_list.js<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * @fileOverview 超级白名单cgi</span><br><span class=\"line\"> * @version 1.0.0</span><br><span class=\"line\"> * @author &lt;a href=&quot;mailto:lucienxu@tencent.com&quot;&gt;lucienxu&lt;/a&gt;</span><br><span class=\"line\"> * @date 2015/9/8</span><br><span class=\"line\"> * @copyright Copyright (c) 2014, Tencent Inc. All rights reserved.</span><br><span class=\"line\"> * @see [link]</span><br><span class=\"line\"> */</span><br><span class=\"line\"></span><br><span class=\"line\">var Sequelize = require(&apos;sequelize&apos;);</span><br><span class=\"line\">var co = require(&apos;co&apos;);</span><br><span class=\"line\">var db = new Sequelize(&apos;mysql://root@127.0.0.1:3306/xxx&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">module.exports = function (method, param, resp) &#123;</span><br><span class=\"line\">    /*</span><br><span class=\"line\">    *   三个参数，method是get/post，param是传入参数，resp是输出数据</span><br><span class=\"line\">    *   resp(err, result);</span><br><span class=\"line\">    *   resp传入两个参数，第一个是错误信息，将通过console打印出来，第二项是输出的结果result，result为json格式</span><br><span class=\"line\">    */</span><br><span class=\"line\"></span><br><span class=\"line\">    co(function *() &#123;</span><br><span class=\"line\">        //db.sync();</span><br><span class=\"line\"></span><br><span class=\"line\">        db[&quot;t_misc_conf&quot;] = db.define(&apos;t_misc_conf&apos;, &#123;</span><br><span class=\"line\">            key: &#123;</span><br><span class=\"line\">                type: Sequelize.STRING,</span><br><span class=\"line\">                primaryKey: true,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            value: Sequelize.TEXT,</span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\">            timestamps: false,</span><br><span class=\"line\">            freezeTableName: true,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        console.log(method)</span><br><span class=\"line\">        console.log(param)</span><br><span class=\"line\"></span><br><span class=\"line\">        var result;</span><br><span class=\"line\"></span><br><span class=\"line\">        if(method == &apos;get&apos;)&#123;</span><br><span class=\"line\">            console.log(&apos;method - get&apos;)</span><br><span class=\"line\">            switch (param.action)&#123;</span><br><span class=\"line\">                case &apos;get_white_list&apos;:</span><br><span class=\"line\">                    console.log(&apos;get_white_list&apos;)</span><br><span class=\"line\">                    result = yield *getWhiteList();</span><br><span class=\"line\">                    break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;else if(method == &apos;post&apos;)&#123;</span><br><span class=\"line\">            console.log(&apos;method - post&apos;)</span><br><span class=\"line\">            switch (param.action)&#123;</span><br><span class=\"line\">                case &apos;set_white_list&apos;:</span><br><span class=\"line\">                    console.log(&apos;set_white_list&apos;)</span><br><span class=\"line\">                    result = yield *setWhiteList(param);</span><br><span class=\"line\">                    break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        resp(null, result);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    function *getWhiteList()&#123;</span><br><span class=\"line\">        console.log(&apos;get_white_list---begin&apos;)</span><br><span class=\"line\">        var result = yield function (done) &#123;</span><br><span class=\"line\">            db.t_misc_conf.findOne(&#123;where: &#123;key: &apos;super_whitelist&apos;&#125;&#125;).then(function (res) &#123;</span><br><span class=\"line\">                console.log(&apos;get_white_list--yield--done&apos;)</span><br><span class=\"line\">                console.log(res.get(&apos;value&apos;))</span><br><span class=\"line\">                done(null, &#123;&quot;ret&quot;: 0, msg: &apos;success&apos;, &quot;result&quot;: res.get(&apos;value&apos;)&#125;);</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        console.log(&apos;get_white_list---done&apos;)</span><br><span class=\"line\">        return result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function *setWhiteList(param)&#123;</span><br><span class=\"line\">        console.log(&apos;set_white_list---begin&apos;)</span><br><span class=\"line\">        var data = &#123;</span><br><span class=\"line\">            value: param.value</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        var result = yield function (done) &#123;</span><br><span class=\"line\">            db.t_misc_conf.update(data, &#123;where: &#123;key: &apos;super_whitelist&apos;&#125;&#125;).then(function (res) &#123;</span><br><span class=\"line\">                console.log(res)</span><br><span class=\"line\">                done(null, &#123;&quot;ret&quot;: 0, msg: &apos;success&apos;&#125;);</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        console.log(&apos;set_white_list---done&apos;)</span><br><span class=\"line\">        return result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<p>最近有需求需要用到node来写一些简易的cgi，帮助后台同学减轻压力。</p>\n<p>用node写cgi有两个问题，一个是端口，我们不能每加一个cgi就新增一个端口；第二个是异步回调问题，实现中会遇到很多例如读DB、读文件的异步行为，多层的callback会让代码很繁琐且不易输出内容。</p>\n<p>于是想着用最近很火的tj大神的Koa来搭建一套node-cgi框架。</p>\n<p>先说说koa，koa是基于co的类似于express的web开发框架，了解koa首先要了解co，了解co首先要了解ES6的generator。</p>\n<p>#1.generator</p>\n<p>generator是ES6的新函数，写法如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function* generator()&#123;</span><br><span class=\"line\">   yield hello;</span><br><span class=\"line\">   yield word;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">var G = generator();</span><br><span class=\"line\"></span><br><span class=\"line\">console.log(G.next()); //&#123; value: hello, done: false &#125;</span><br><span class=\"line\">console.log(G.next()); //&#123; value: word, done: false &#125;</span><br><span class=\"line\">console.log(G.next()); //&#123; value: undefined, done: true &#125;</span><br></pre></td></tr></table></figure>\n<p>generator使用yield的方法，让函数内部执行暂定，只有当调用next()方法的时候，才会接着往下走，同时返回一个对象，返回对象有两个值，一个是yield后面执行的结果，一个是done字段，如果yield都执行完了 done 字段就变为true。</p>\n<p>使用yield来阻断函数内部执行，就可以将我们的异步函数转成同步执行。</p>\n<p>#2. co</p>\n<p>下来再看co，co帮助我们实现了自动调用next()方法，在co内部写yield，等待yield执行完毕就可以继续向下进行。</p>\n<p>例如使用tof获取用户信息：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">co(function *() &#123;</span><br><span class=\"line\">    var user = yield checkLogin(ticket, ip);</span><br><span class=\"line\">    console.log(user);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">function checkLogin(ticket, ip)&#123;</span><br><span class=\"line\">    return function (done) &#123;</span><br><span class=\"line\">        tof.checkLogin(ticket, ip, function(err, result)&#123;</span><br><span class=\"line\">            var user = result;</span><br><span class=\"line\">            done(null, user);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>#3. koa</p>\n<p>koa和express一样，使用中间件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var koa = require(&apos;koa&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">var app = koa();</span><br><span class=\"line\">app.use(function *() &#123;</span><br><span class=\"line\">  this.body = &apos;Hello World!&apos;;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">app.listen(8888);</span><br></pre></td></tr></table></figure>\n<p> koa的Context 把 node 的 request, response 对象封装进一个单独对象, 并提供许多开发 web 应用和 APIs 有用的方法. 那些在 HTTP server 开发中使用非常频繁操作, 直接在 Koa 里实现, 而不是放在更高层次的框架, 这样中间件就不需要重复实现这些通用的功能。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.use(function *()&#123;</span><br><span class=\"line\">  this; // is the Context</span><br><span class=\"line\">  this.request; // is a koa Request</span><br><span class=\"line\">  this.response; // is a koa Response</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p> 需要输出的内容，直接赋值给this.body即可。</p>\n<ol>\n<li>node-cgi</li>\n</ol>\n<p>了解完co和koa，我们就可以搭建一个简易的node-cgi框架，目录如下：</p>\n<p>app.js作为入口，使用</p>\n<p>node –harmony-generators app.js<br>来进行启动，在modules这块使用按需加载，拿到url里的参数后再加载对应的module：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var cgi = require(&apos;./modules/&apos; + cgiName);</span><br><span class=\"line\"></span><br><span class=\"line\">var result = yield function(done)&#123;</span><br><span class=\"line\">    cgi(&apos;get&apos;, param, done);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样每次我们发布 只需替换modules文件夹里的js文件即可，不需要启停node服务（和php很像）。</p>\n<p>而modules里的cgi文件，可以使用co来处理内部的异步回调，方法和koa相同，愉快同步向下写js从此开始了~</p>\n<p>下面附上代码</p>\n<p>app.js</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * @fileOverview node-cgi入口</span><br><span class=\"line\"> * @version 1.0.0</span><br><span class=\"line\"> * @author &lt;a href=&quot;mailto:lucienxu@tencent.com&quot;&gt;lucienxu&lt;/a&gt;</span><br><span class=\"line\"> * @date 2015/9/8</span><br><span class=\"line\"> * @copyright Copyright (c) 2014, Tencent Inc. All rights reserved.</span><br><span class=\"line\"> * @see [link]</span><br><span class=\"line\"> */</span><br><span class=\"line\"></span><br><span class=\"line\">var logger = require(&apos;koa-logger&apos;);</span><br><span class=\"line\">var router = require(&apos;koa-router&apos;)();</span><br><span class=\"line\">var parse = require(&apos;co-body&apos;);</span><br><span class=\"line\">var tof = require(&apos;tof&apos;)(&apos;b90b498f8ab441afbcf4f023f7dd8e08&apos;);</span><br><span class=\"line\">var koa = require(&apos;koa&apos;);</span><br><span class=\"line\">var app = koa();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">var posts = [];</span><br><span class=\"line\"></span><br><span class=\"line\">var user;</span><br><span class=\"line\"></span><br><span class=\"line\">app.keys = [&apos;some secret hurr&apos;];</span><br><span class=\"line\"></span><br><span class=\"line\">//app.env = &apos;production&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\">//console.log(app.env);</span><br><span class=\"line\"></span><br><span class=\"line\">// middleware</span><br><span class=\"line\"></span><br><span class=\"line\">app.use(logger());</span><br><span class=\"line\"></span><br><span class=\"line\">router.get(&apos;/node-cgi/:cgiName&apos;, get);</span><br><span class=\"line\">router.post(&apos;/node-cgi/:cgiName&apos;, post);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">app.use(router.routes()).use(router.allowedMethods());</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">app.use(function *() &#123;</span><br><span class=\"line\">    console.log(&apos;tof&apos;);</span><br><span class=\"line\">    console.log(user)</span><br><span class=\"line\">    if(user)&#123;</span><br><span class=\"line\">        return;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    if (&apos;production&apos; === app.env) &#123;</span><br><span class=\"line\">        console.log(&apos;productation&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\">        var ticket = this.cookies.get(&apos;TCOA_TICKET&apos;);</span><br><span class=\"line\">        var ip = this.ip.substr(7);</span><br><span class=\"line\">        var value;</span><br><span class=\"line\">        yield checkLogin(ticket, ip);</span><br><span class=\"line\"></span><br><span class=\"line\">        console.log(user);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        console.log(&apos;dev&apos;);</span><br><span class=\"line\">        user = &#123;</span><br><span class=\"line\">            loginname: &quot;lucienxu&quot;,</span><br><span class=\"line\">            chinesename: &quot;徐扬&quot;,</span><br><span class=\"line\">            deptname: &quot;微信广告&quot;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">function checkLogin(ticket, ip)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    return function (done) &#123;</span><br><span class=\"line\">        tof.checkLogin(ticket, ip, function(err, result)&#123;</span><br><span class=\"line\">            user = result;</span><br><span class=\"line\">            //user = 1;</span><br><span class=\"line\">            done();</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// route definitions</span><br><span class=\"line\"></span><br><span class=\"line\">function *get(next)&#123;</span><br><span class=\"line\">    yield next;</span><br><span class=\"line\"></span><br><span class=\"line\">    var cgiName = this.params.cgiName;</span><br><span class=\"line\">    console.log(cgiName + &apos;: begin--get&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">    var param = this.request.query;</span><br><span class=\"line\"></span><br><span class=\"line\">    this.type = &apos;text/html; charset=utf-8&apos;;</span><br><span class=\"line\">    this.set(&apos;Cache-Control&apos;, &apos;no-cache&apos;);</span><br><span class=\"line\">    this.set(&apos;Connection&apos;, &apos;keep-alive&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">    var cgi = require(&apos;./modules/&apos; + cgiName);</span><br><span class=\"line\"></span><br><span class=\"line\">    var result = yield function(done)&#123;</span><br><span class=\"line\">        cgi(&apos;get&apos;, param, done);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    this.body = param.callback + &apos;(&apos; + JSON.stringify(result) + &apos;)&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\">    console.log(cgiName + &apos;: done--get&apos;);</span><br><span class=\"line\">    return;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function *post(next)&#123;</span><br><span class=\"line\">    yield next;</span><br><span class=\"line\"></span><br><span class=\"line\">    var cgiName = this.params.cgiName;</span><br><span class=\"line\">    console.log(cgiName + &apos;: begin--post&apos;);</span><br><span class=\"line\">    var param = yield parse.form(this);</span><br><span class=\"line\"></span><br><span class=\"line\">    this.type = &apos;application/json; charset=utf-8&apos;;</span><br><span class=\"line\">    this.set(&apos;Cache-Control&apos;, &apos;no-cache&apos;);</span><br><span class=\"line\">    this.set(&apos;Connection&apos;, &apos;keep-alive&apos;);</span><br><span class=\"line\">    this.set(&quot;Access-Control-Allow-Origin&quot;, this.header.origin);</span><br><span class=\"line\">    this.set(&quot;Access-Control-Allow-Credentials&quot;, &quot;true&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">    var cgi = require(&apos;./modules/&apos; + cgiName);</span><br><span class=\"line\"></span><br><span class=\"line\">    var result = yield function(done)&#123;</span><br><span class=\"line\">        cgi(&apos;post&apos;, param, done);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    this.body = result;</span><br><span class=\"line\"></span><br><span class=\"line\">    console.log(cgiName + &apos;: done--post&apos;);</span><br><span class=\"line\">    return;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// listen</span><br><span class=\"line\"></span><br><span class=\"line\">app.listen(33010);</span><br><span class=\"line\">console.log(&apos;listening on port 33010&apos;);</span><br></pre></td></tr></table></figure>\n<p>sns_super_white_list.js<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * @fileOverview 超级白名单cgi</span><br><span class=\"line\"> * @version 1.0.0</span><br><span class=\"line\"> * @author &lt;a href=&quot;mailto:lucienxu@tencent.com&quot;&gt;lucienxu&lt;/a&gt;</span><br><span class=\"line\"> * @date 2015/9/8</span><br><span class=\"line\"> * @copyright Copyright (c) 2014, Tencent Inc. All rights reserved.</span><br><span class=\"line\"> * @see [link]</span><br><span class=\"line\"> */</span><br><span class=\"line\"></span><br><span class=\"line\">var Sequelize = require(&apos;sequelize&apos;);</span><br><span class=\"line\">var co = require(&apos;co&apos;);</span><br><span class=\"line\">var db = new Sequelize(&apos;mysql://root@127.0.0.1:3306/xxx&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">module.exports = function (method, param, resp) &#123;</span><br><span class=\"line\">    /*</span><br><span class=\"line\">    *   三个参数，method是get/post，param是传入参数，resp是输出数据</span><br><span class=\"line\">    *   resp(err, result);</span><br><span class=\"line\">    *   resp传入两个参数，第一个是错误信息，将通过console打印出来，第二项是输出的结果result，result为json格式</span><br><span class=\"line\">    */</span><br><span class=\"line\"></span><br><span class=\"line\">    co(function *() &#123;</span><br><span class=\"line\">        //db.sync();</span><br><span class=\"line\"></span><br><span class=\"line\">        db[&quot;t_misc_conf&quot;] = db.define(&apos;t_misc_conf&apos;, &#123;</span><br><span class=\"line\">            key: &#123;</span><br><span class=\"line\">                type: Sequelize.STRING,</span><br><span class=\"line\">                primaryKey: true,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            value: Sequelize.TEXT,</span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\">            timestamps: false,</span><br><span class=\"line\">            freezeTableName: true,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        console.log(method)</span><br><span class=\"line\">        console.log(param)</span><br><span class=\"line\"></span><br><span class=\"line\">        var result;</span><br><span class=\"line\"></span><br><span class=\"line\">        if(method == &apos;get&apos;)&#123;</span><br><span class=\"line\">            console.log(&apos;method - get&apos;)</span><br><span class=\"line\">            switch (param.action)&#123;</span><br><span class=\"line\">                case &apos;get_white_list&apos;:</span><br><span class=\"line\">                    console.log(&apos;get_white_list&apos;)</span><br><span class=\"line\">                    result = yield *getWhiteList();</span><br><span class=\"line\">                    break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;else if(method == &apos;post&apos;)&#123;</span><br><span class=\"line\">            console.log(&apos;method - post&apos;)</span><br><span class=\"line\">            switch (param.action)&#123;</span><br><span class=\"line\">                case &apos;set_white_list&apos;:</span><br><span class=\"line\">                    console.log(&apos;set_white_list&apos;)</span><br><span class=\"line\">                    result = yield *setWhiteList(param);</span><br><span class=\"line\">                    break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        resp(null, result);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    function *getWhiteList()&#123;</span><br><span class=\"line\">        console.log(&apos;get_white_list---begin&apos;)</span><br><span class=\"line\">        var result = yield function (done) &#123;</span><br><span class=\"line\">            db.t_misc_conf.findOne(&#123;where: &#123;key: &apos;super_whitelist&apos;&#125;&#125;).then(function (res) &#123;</span><br><span class=\"line\">                console.log(&apos;get_white_list--yield--done&apos;)</span><br><span class=\"line\">                console.log(res.get(&apos;value&apos;))</span><br><span class=\"line\">                done(null, &#123;&quot;ret&quot;: 0, msg: &apos;success&apos;, &quot;result&quot;: res.get(&apos;value&apos;)&#125;);</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        console.log(&apos;get_white_list---done&apos;)</span><br><span class=\"line\">        return result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function *setWhiteList(param)&#123;</span><br><span class=\"line\">        console.log(&apos;set_white_list---begin&apos;)</span><br><span class=\"line\">        var data = &#123;</span><br><span class=\"line\">            value: param.value</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        var result = yield function (done) &#123;</span><br><span class=\"line\">            db.t_misc_conf.update(data, &#123;where: &#123;key: &apos;super_whitelist&apos;&#125;&#125;).then(function (res) &#123;</span><br><span class=\"line\">                console.log(res)</span><br><span class=\"line\">                done(null, &#123;&quot;ret&quot;: 0, msg: &apos;success&apos;&#125;);</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        console.log(&apos;set_white_list---done&apos;)</span><br><span class=\"line\">        return result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n"},{"title":"React Native笔记-1","date":"2016-05-30T03:11:00.000Z","cover_index":"/img/RNLearning-cover_index-1.jpeg","cover_detail":"/img/RNLearning-cover_detail.png","comments":1,"_content":"\n# 环境依赖\n\n本文所写依赖mac环境\n```\nbrew install node         // 建议5.0以上\nbrew install watchman     // 监听文件更新\nbrew install flow         // 类型检测,可不安装\n```\n\n## iOS\n\nXcode 7.x\n\n## Android\n\n[JDK](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html)\n\nAndroid SDK\n```\nbrew install android-sdk  // 安装 Android SDK\nsudo vi ~/.bashrc         // 编辑环境变量\n```\n.bashrc 文件写入以下内容\n```\nexport ANDROID_HOME=/usr/local/opt/android-sdk\n```\n终端输入 android , 打开后下载最新 tools, API, Lib\n\n\n# 创建项目\n\n```\nnpm install -g react-native-cli    // 安装react-native 命令\nreact-native init beyondpenguin    // 初始化工程\n```\n\n创建完成后,大致目录结构如下图\n![目录](/img/RNLearning-1.png)\n\nindex.ios.js 是 iOS 的入口文件\nindex.android.js 是 Android 的入口文件\nindex.web.js 是用了[react-web](https://github.com/taobaofed/react-web)后可以将react项目打包为H5页面\nserver.js 是我用来模拟fetch数据起的一个express服务文件\n\n我们的项目开发在 app 目录下\n\n在看 app 目录之前建议先学习 [redux](http://cn.redux.js.org/)\n\n再来看看我们项目中都用到了哪些好用的组件,贴出我的 package.json\n\n```\n{\n  \"name\": \"beyondpenguin\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"scripts\": {\n    \"start\": \"node node_modules/react-native/local-cli/cli.js start\"\n  },\n  \"dependencies\": {\n    \"i\": \"^0.3.4\",\n    \"react\": \"^0.14.7\",\n    \"react-dom\": \"^0.14.7\",\n    \"react-native\": \"^0.22.2\",\n    \"react-native-vector-icons\": \"^2.0.2\",\n    \"react-redux\": \"^4.4.1\",\n    \"react-web\": \"^0.2.4\",\n    \"redux\": \"^3.3.1\",\n    \"redux-thunk\": \"^2.0.1\",\n    \"rn-viewpager\": \"^1.1.1\",\n    \"rnpm\": \"^1.5.3\"\n  },\n  \"devDependencies\": {\n    \"babel\": \"^6.5.2\",\n    \"babel-core\": \"5.8.19\",\n    \"babel-loader\": \"^5.1.3\",\n    \"haste-resolver-webpack-plugin\": \"^0.1.2\",\n    \"json-loader\": \"^0.5.2\",\n    \"react-hot-loader\": \"^1.2.7\",\n    \"webpack\": \"^1.12.10\",\n    \"webpack-dev-server\": \"^1.14.0\",\n    \"webpack-html-plugin\": \"^0.1.1\"\n  }\n}\n```\n说下几个好用的:\n\n* [react-native-vector-icons](https://github.com/oblador/react-native-vector-icons), 一个icon集合的库, 对于开发demo的我们来说, 非常好用\n\n* [redux-thunk](https://github.com/gaearon/redux-thunk), redux异步 action 的组件\n\n* [rnpm](https://github.com/rnpm/rnpm), React Native Package Manager\n\n* 另推荐个发布 RN 组件的站, [js.coach](https://js.coach/), 有很多第三方的组件, 帮助我们兼容iOS和Android组件的差异","source":"_posts/RNlLearning-1.md","raw":"title: React Native笔记-1\ndate: 2016-05-30 11:11\ncover_index: /img/RNLearning-cover_index-1.jpeg\ncover_detail: /img/RNLearning-cover_detail.png\ntags: React Native\ncomments: true\n---\n\n# 环境依赖\n\n本文所写依赖mac环境\n```\nbrew install node         // 建议5.0以上\nbrew install watchman     // 监听文件更新\nbrew install flow         // 类型检测,可不安装\n```\n\n## iOS\n\nXcode 7.x\n\n## Android\n\n[JDK](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html)\n\nAndroid SDK\n```\nbrew install android-sdk  // 安装 Android SDK\nsudo vi ~/.bashrc         // 编辑环境变量\n```\n.bashrc 文件写入以下内容\n```\nexport ANDROID_HOME=/usr/local/opt/android-sdk\n```\n终端输入 android , 打开后下载最新 tools, API, Lib\n\n\n# 创建项目\n\n```\nnpm install -g react-native-cli    // 安装react-native 命令\nreact-native init beyondpenguin    // 初始化工程\n```\n\n创建完成后,大致目录结构如下图\n![目录](/img/RNLearning-1.png)\n\nindex.ios.js 是 iOS 的入口文件\nindex.android.js 是 Android 的入口文件\nindex.web.js 是用了[react-web](https://github.com/taobaofed/react-web)后可以将react项目打包为H5页面\nserver.js 是我用来模拟fetch数据起的一个express服务文件\n\n我们的项目开发在 app 目录下\n\n在看 app 目录之前建议先学习 [redux](http://cn.redux.js.org/)\n\n再来看看我们项目中都用到了哪些好用的组件,贴出我的 package.json\n\n```\n{\n  \"name\": \"beyondpenguin\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"scripts\": {\n    \"start\": \"node node_modules/react-native/local-cli/cli.js start\"\n  },\n  \"dependencies\": {\n    \"i\": \"^0.3.4\",\n    \"react\": \"^0.14.7\",\n    \"react-dom\": \"^0.14.7\",\n    \"react-native\": \"^0.22.2\",\n    \"react-native-vector-icons\": \"^2.0.2\",\n    \"react-redux\": \"^4.4.1\",\n    \"react-web\": \"^0.2.4\",\n    \"redux\": \"^3.3.1\",\n    \"redux-thunk\": \"^2.0.1\",\n    \"rn-viewpager\": \"^1.1.1\",\n    \"rnpm\": \"^1.5.3\"\n  },\n  \"devDependencies\": {\n    \"babel\": \"^6.5.2\",\n    \"babel-core\": \"5.8.19\",\n    \"babel-loader\": \"^5.1.3\",\n    \"haste-resolver-webpack-plugin\": \"^0.1.2\",\n    \"json-loader\": \"^0.5.2\",\n    \"react-hot-loader\": \"^1.2.7\",\n    \"webpack\": \"^1.12.10\",\n    \"webpack-dev-server\": \"^1.14.0\",\n    \"webpack-html-plugin\": \"^0.1.1\"\n  }\n}\n```\n说下几个好用的:\n\n* [react-native-vector-icons](https://github.com/oblador/react-native-vector-icons), 一个icon集合的库, 对于开发demo的我们来说, 非常好用\n\n* [redux-thunk](https://github.com/gaearon/redux-thunk), redux异步 action 的组件\n\n* [rnpm](https://github.com/rnpm/rnpm), React Native Package Manager\n\n* 另推荐个发布 RN 组件的站, [js.coach](https://js.coach/), 有很多第三方的组件, 帮助我们兼容iOS和Android组件的差异","slug":"RNlLearning-1","published":1,"updated":"2016-05-31T02:24:38.000Z","_id":"cioutmm2x0002xktkhesnzs6o","layout":"post","photos":[],"link":"","content":"<h1 id=\"环境依赖\"><a href=\"#环境依赖\" class=\"headerlink\" title=\"环境依赖\"></a>环境依赖</h1><p>本文所写依赖mac环境<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install node         // 建议5.0以上</span><br><span class=\"line\">brew install watchman     // 监听文件更新</span><br><span class=\"line\">brew install flow         // 类型检测,可不安装</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"iOS\"><a href=\"#iOS\" class=\"headerlink\" title=\"iOS\"></a>iOS</h2><p>Xcode 7.x</p>\n<h2 id=\"Android\"><a href=\"#Android\" class=\"headerlink\" title=\"Android\"></a>Android</h2><p><a href=\"http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html\" target=\"_blank\" rel=\"external\">JDK</a></p>\n<p>Android SDK<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install android-sdk  // 安装 Android SDK</span><br><span class=\"line\">sudo vi ~/.bashrc         // 编辑环境变量</span><br></pre></td></tr></table></figure></p>\n<p>.bashrc 文件写入以下内容<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export ANDROID_HOME=/usr/local/opt/android-sdk</span><br></pre></td></tr></table></figure></p>\n<p>终端输入 android , 打开后下载最新 tools, API, Lib</p>\n<h1 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g react-native-cli    // 安装react-native 命令</span><br><span class=\"line\">react-native init beyondpenguin    // 初始化工程</span><br></pre></td></tr></table></figure>\n<p>创建完成后,大致目录结构如下图<br><img src=\"/img/RNLearning-1.png\" alt=\"目录\"></p>\n<p>index.ios.js 是 iOS 的入口文件<br>index.android.js 是 Android 的入口文件<br>index.web.js 是用了<a href=\"https://github.com/taobaofed/react-web\" target=\"_blank\" rel=\"external\">react-web</a>后可以将react项目打包为H5页面<br>server.js 是我用来模拟fetch数据起的一个express服务文件</p>\n<p>我们的项目开发在 app 目录下</p>\n<p>在看 app 目录之前建议先学习 <a href=\"http://cn.redux.js.org/\" target=\"_blank\" rel=\"external\">redux</a></p>\n<p>再来看看我们项目中都用到了哪些好用的组件,贴出我的 package.json</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;name&quot;: &quot;beyondpenguin&quot;,</span><br><span class=\"line\">  &quot;version&quot;: &quot;0.0.1&quot;,</span><br><span class=\"line\">  &quot;private&quot;: true,</span><br><span class=\"line\">  &quot;scripts&quot;: &#123;</span><br><span class=\"line\">    &quot;start&quot;: &quot;node node_modules/react-native/local-cli/cli.js start&quot;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &quot;dependencies&quot;: &#123;</span><br><span class=\"line\">    &quot;i&quot;: &quot;^0.3.4&quot;,</span><br><span class=\"line\">    &quot;react&quot;: &quot;^0.14.7&quot;,</span><br><span class=\"line\">    &quot;react-dom&quot;: &quot;^0.14.7&quot;,</span><br><span class=\"line\">    &quot;react-native&quot;: &quot;^0.22.2&quot;,</span><br><span class=\"line\">    &quot;react-native-vector-icons&quot;: &quot;^2.0.2&quot;,</span><br><span class=\"line\">    &quot;react-redux&quot;: &quot;^4.4.1&quot;,</span><br><span class=\"line\">    &quot;react-web&quot;: &quot;^0.2.4&quot;,</span><br><span class=\"line\">    &quot;redux&quot;: &quot;^3.3.1&quot;,</span><br><span class=\"line\">    &quot;redux-thunk&quot;: &quot;^2.0.1&quot;,</span><br><span class=\"line\">    &quot;rn-viewpager&quot;: &quot;^1.1.1&quot;,</span><br><span class=\"line\">    &quot;rnpm&quot;: &quot;^1.5.3&quot;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &quot;devDependencies&quot;: &#123;</span><br><span class=\"line\">    &quot;babel&quot;: &quot;^6.5.2&quot;,</span><br><span class=\"line\">    &quot;babel-core&quot;: &quot;5.8.19&quot;,</span><br><span class=\"line\">    &quot;babel-loader&quot;: &quot;^5.1.3&quot;,</span><br><span class=\"line\">    &quot;haste-resolver-webpack-plugin&quot;: &quot;^0.1.2&quot;,</span><br><span class=\"line\">    &quot;json-loader&quot;: &quot;^0.5.2&quot;,</span><br><span class=\"line\">    &quot;react-hot-loader&quot;: &quot;^1.2.7&quot;,</span><br><span class=\"line\">    &quot;webpack&quot;: &quot;^1.12.10&quot;,</span><br><span class=\"line\">    &quot;webpack-dev-server&quot;: &quot;^1.14.0&quot;,</span><br><span class=\"line\">    &quot;webpack-html-plugin&quot;: &quot;^0.1.1&quot;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>说下几个好用的:</p>\n<ul>\n<li><p><a href=\"https://github.com/oblador/react-native-vector-icons\" target=\"_blank\" rel=\"external\">react-native-vector-icons</a>, 一个icon集合的库, 对于开发demo的我们来说, 非常好用</p>\n</li>\n<li><p><a href=\"https://github.com/gaearon/redux-thunk\" target=\"_blank\" rel=\"external\">redux-thunk</a>, redux异步 action 的组件</p>\n</li>\n<li><p><a href=\"https://github.com/rnpm/rnpm\" target=\"_blank\" rel=\"external\">rnpm</a>, React Native Package Manager</p>\n</li>\n<li><p>另推荐个发布 RN 组件的站, <a href=\"https://js.coach/\" target=\"_blank\" rel=\"external\">js.coach</a>, 有很多第三方的组件, 帮助我们兼容iOS和Android组件的差异</p>\n</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"环境依赖\"><a href=\"#环境依赖\" class=\"headerlink\" title=\"环境依赖\"></a>环境依赖</h1><p>本文所写依赖mac环境<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install node         // 建议5.0以上</span><br><span class=\"line\">brew install watchman     // 监听文件更新</span><br><span class=\"line\">brew install flow         // 类型检测,可不安装</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"iOS\"><a href=\"#iOS\" class=\"headerlink\" title=\"iOS\"></a>iOS</h2><p>Xcode 7.x</p>\n<h2 id=\"Android\"><a href=\"#Android\" class=\"headerlink\" title=\"Android\"></a>Android</h2><p><a href=\"http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html\">JDK</a></p>\n<p>Android SDK<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install android-sdk  // 安装 Android SDK</span><br><span class=\"line\">sudo vi ~/.bashrc         // 编辑环境变量</span><br></pre></td></tr></table></figure></p>\n<p>.bashrc 文件写入以下内容<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export ANDROID_HOME=/usr/local/opt/android-sdk</span><br></pre></td></tr></table></figure></p>\n<p>终端输入 android , 打开后下载最新 tools, API, Lib</p>\n<h1 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g react-native-cli    // 安装react-native 命令</span><br><span class=\"line\">react-native init beyondpenguin    // 初始化工程</span><br></pre></td></tr></table></figure>\n<p>创建完成后,大致目录结构如下图<br><img src=\"/img/RNLearning-1.png\" alt=\"目录\"></p>\n<p>index.ios.js 是 iOS 的入口文件<br>index.android.js 是 Android 的入口文件<br>index.web.js 是用了<a href=\"https://github.com/taobaofed/react-web\">react-web</a>后可以将react项目打包为H5页面<br>server.js 是我用来模拟fetch数据起的一个express服务文件</p>\n<p>我们的项目开发在 app 目录下</p>\n<p>在看 app 目录之前建议先学习 <a href=\"http://cn.redux.js.org/\">redux</a></p>\n<p>再来看看我们项目中都用到了哪些好用的组件,贴出我的 package.json</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;name&quot;: &quot;beyondpenguin&quot;,</span><br><span class=\"line\">  &quot;version&quot;: &quot;0.0.1&quot;,</span><br><span class=\"line\">  &quot;private&quot;: true,</span><br><span class=\"line\">  &quot;scripts&quot;: &#123;</span><br><span class=\"line\">    &quot;start&quot;: &quot;node node_modules/react-native/local-cli/cli.js start&quot;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &quot;dependencies&quot;: &#123;</span><br><span class=\"line\">    &quot;i&quot;: &quot;^0.3.4&quot;,</span><br><span class=\"line\">    &quot;react&quot;: &quot;^0.14.7&quot;,</span><br><span class=\"line\">    &quot;react-dom&quot;: &quot;^0.14.7&quot;,</span><br><span class=\"line\">    &quot;react-native&quot;: &quot;^0.22.2&quot;,</span><br><span class=\"line\">    &quot;react-native-vector-icons&quot;: &quot;^2.0.2&quot;,</span><br><span class=\"line\">    &quot;react-redux&quot;: &quot;^4.4.1&quot;,</span><br><span class=\"line\">    &quot;react-web&quot;: &quot;^0.2.4&quot;,</span><br><span class=\"line\">    &quot;redux&quot;: &quot;^3.3.1&quot;,</span><br><span class=\"line\">    &quot;redux-thunk&quot;: &quot;^2.0.1&quot;,</span><br><span class=\"line\">    &quot;rn-viewpager&quot;: &quot;^1.1.1&quot;,</span><br><span class=\"line\">    &quot;rnpm&quot;: &quot;^1.5.3&quot;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &quot;devDependencies&quot;: &#123;</span><br><span class=\"line\">    &quot;babel&quot;: &quot;^6.5.2&quot;,</span><br><span class=\"line\">    &quot;babel-core&quot;: &quot;5.8.19&quot;,</span><br><span class=\"line\">    &quot;babel-loader&quot;: &quot;^5.1.3&quot;,</span><br><span class=\"line\">    &quot;haste-resolver-webpack-plugin&quot;: &quot;^0.1.2&quot;,</span><br><span class=\"line\">    &quot;json-loader&quot;: &quot;^0.5.2&quot;,</span><br><span class=\"line\">    &quot;react-hot-loader&quot;: &quot;^1.2.7&quot;,</span><br><span class=\"line\">    &quot;webpack&quot;: &quot;^1.12.10&quot;,</span><br><span class=\"line\">    &quot;webpack-dev-server&quot;: &quot;^1.14.0&quot;,</span><br><span class=\"line\">    &quot;webpack-html-plugin&quot;: &quot;^0.1.1&quot;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>说下几个好用的:</p>\n<ul>\n<li><p><a href=\"https://github.com/oblador/react-native-vector-icons\">react-native-vector-icons</a>, 一个icon集合的库, 对于开发demo的我们来说, 非常好用</p>\n</li>\n<li><p><a href=\"https://github.com/gaearon/redux-thunk\">redux-thunk</a>, redux异步 action 的组件</p>\n</li>\n<li><p><a href=\"https://github.com/rnpm/rnpm\">rnpm</a>, React Native Package Manager</p>\n</li>\n<li><p>另推荐个发布 RN 组件的站, <a href=\"https://js.coach/\">js.coach</a>, 有很多第三方的组件, 帮助我们兼容iOS和Android组件的差异</p>\n</li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cioutmm2x0002xktkhesnzs6o","tag_id":"cioutmm340003xktk6qid0qne","_id":"cioutmm370005xktk9rg176wm"},{"post_id":"ciou1e87v0001xktkk6o3my4x","tag_id":"cioutmm360004xktkmrzaewof","_id":"cioutmm380006xktkw54bwyio"}],"Tag":[{"name":"React Native","_id":"cioutmm340003xktk6qid0qne"},{"name":"koa","_id":"cioutmm360004xktkmrzaewof"}]}}